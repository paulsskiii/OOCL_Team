USE online_ordering_system;

CREATE TABLE GENDER(
	id INTEGER PRIMARY KEY,
    gender_name VARCHAR(10)
);

CREATE TABLE BANK_DETAILS(
	id INTEGER PRIMARY KEY AUTO_INCREMENT,
    payment_option VARCHAR(10),
    validity_date DATETIME,
    is_valid bool
);

CREATE TABLE CUSTOMERS(
	customer_id INTEGER PRIMARY KEY AUTO_INCREMENT,
    fname VARCHAR(25),
    lname VARCHAR(25),
    contact_number VARCHAR(20) NOT NULL,
    email_address VARCHAR(35) NOT NULL,
    bank_id INTEGER,
    gender_id INTEGER,
    FOREIGN KEY (GENDER_ID) REFERENCES GENDER(id)
);

ALTER TABLE CUSTOMERS ADD CONSTRAINT FK_CUSTOMERS_BANK_ID
	FOREIGN KEY (bank_id) REFERENCES BANK_DETAILS(id);
    
CREATE TABLE SELLERS (
	id INTEGER PRIMARY KEY AUTO_INCREMENT,
    fname VARCHAR(25),
    lname VARCHAR(25),
    contact_number VARCHAR(20) NOT NULL,
    email_address VARCHAR(35) NOT NULL,
    bank_id INTEGER,
    FOREIGN KEY (bank_id) REFERENCES bank_details(id)
);

CREATE TABLE PRODUCT_CLASSIFICATION (
	ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    PRODUCT_CLASSIFICATION_NAME VARCHAR(25)
);

CREATE TABLE PRODUCTS (
	ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    PRODUCT_NAME VARCHAR(100),
    SELLER_ID INTEGER,
    PRODUCT_CLASSIFICATION_ID INTEGER,
    FOREIGN KEY (PRODUCT_CLASSIFICATION_ID) REFERENCES PRODUCT_CLASSIFICATION(ID)
);

CREATE TABLE STATUS (
	ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    STATUS_NAME VARCHAR(25)
);

CREATE TABLE ORDERS (
	ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    ORDER_cREATED DATETIME,
    STATUS_ID INTEGER,
    ORDERED_BY INTEGER,
    SELLER_ID INTEGER,
    PRODUCT_ID INTEGER,
    FOREIGN KEY (STATUS_ID) REFERENCES STATUS(ID),
    FOREIGN KEY (ORDERED_BY) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (SELLER_ID) REFERENCES SELLERS(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
);

ALTER TABLE ORDERS ADD CONSTRAINT orders_ibfk_4
	FOREIGN KEY (product_id) REFERENCES products(id);

ALTER TABLE ORDERS
DROP CONSTRAINT orders_ibfk_4;



INSERT INTO GENDER (ID, GENDER_NAME) VALUES (1, "MALE");
INSERT INTO GENDER (ID, GENDER_NAME) VALUES (2, "FEMALE");

INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (1, "DEBIT", "2026-07-23 14:30:00", TRUE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (2, "CREDIT", "2026-07-23 14:30:00", TRUE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (3, "DEBIT", "2026-07-23 14:30:00", TRUE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (4, "DEBIT", "2026-07-23 14:30:00", FALSE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (5, "DEBIT", "2026-07-23 14:30:00", TRUE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (6, "DEBIT", "2026-07-23 14:30:00", FALSE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (7, "DEBIT", "2026-07-23 14:30:00", FALSE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (8, "CREDIT", "2026-07-23 14:30:00", TRUE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (9, "DEBIT", "2026-07-23 14:30:00", TRUE);
INSERT INTO BANK_DETAILS (ID, PAYMENT_OPTION, VALIDITY_DATE, IS_VALID) VALUES (10, "DEBIT", "2026-07-23 14:30:00", TRUE);

INSERT INTO PRODUCT_CLASSIFICATION (ID, PRODUCT_CLASSIFICATION_NAME) VALUES (1, "GENERAL");
INSERT INTO PRODUCT_CLASSIFICATION (ID, PRODUCT_CLASSIFICATION_NAME) VALUES (2, "DANGEROUS");
INSERT INTO PRODUCT_CLASSIFICATION (ID, PRODUCT_CLASSIFICATION_NAME) VALUES (3, "REEFER");
INSERT INTO PRODUCT_CLASSIFICATION (ID, PRODUCT_CLASSIFICATION_NAME) VALUES (4, "AWKWARD");
INSERT INTO PRODUCT_CLASSIFICATION (ID, PRODUCT_CLASSIFICATION_NAME) VALUES (5, "REEFER DANGEROUS");
INSERT INTO PRODUCT_CLASSIFICATION (ID, PRODUCT_CLASSIFICATION_NAME) VALUES (6, "AWKWARD DANGEOURS");

INSERT INTO STATUS (ID, STATUS_NAME) VALUES (1, "PENDING");
INSERT INTO STATUS (ID, STATUS_NAME) VALUES (2, "ACCEPTED");
INSERT INTO STATUS (ID, STATUS_NAME) VALUES (3, "DELIVERED");
INSERT INTO STATUS (ID, STATUS_NAME) VALUES (4, "REJECTED");

INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (1, "PAUL", "JACK", "09224543567", "TEST1@EMAIL.COM", 1, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (2, "PAUL", "JACKSON", "09223543567", "TEST2@EMAIL.COM", 4, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (3, "FIRST", "LAST", "09252543567", "TEST3@EMAIL.COM", 5, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (4, "ONE", "TWO", "09224542167", "TEST4@EMAIL.COM", 7, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (5, "DR", "MUNDO", "09224543567", "TEST5@EMAIL.COM", 8, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (6, "FLOW", "G", "09224543567", "TEST6@EMAIL.COM", 10, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (7, "HARING", "MANGGI", "09224543567", "TEST7@EMAIL.COM", 9, 1);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (8, "EABAB", "BABAE", "09224543567", "TEST8@EMAIL.COM", 6, 2);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (9, "PAUL", "TEAMS", "09224543570", "TEST9@EMAIL.COM", 3, 2);
INSERT INTO CUSTOMERS (CUSTOMER_ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID, GENDER_ID)
VALUES (10, "BILLY", "SAHUR", "09224543568", "TEST10@EMAIL.COM", 2, 1);

INSERT INTO SELLERS (ID, FNAME, LNAME, CONTACT_NUMBER, EMAIL_ADDRESS, BANK_ID)
VALUES (1, "NESTOR", "JACK", "09224543567", "TEST1@EMAIL.COM", 1)
,(2, "BRIAN", "JACKSON", "09223543567", "TEST2@EMAIL.COM", 4)
,(3, "CHRIS", "LAST", "09252543567", "TEST3@EMAIL.COM", 5)
,(4, "DANIEL", "TWO", "09224542167", "TEST4@EMAIL.COM", 7)
,(5, "VICTORIO", "MUNDO", "09224543567", "TEST5@EMAIL.COM", 8)
,(6, "PHILIP", "G", "09224543567", "TEST6@EMAIL.COM", 10)
,(7, "RONIN", "MANGGI", "09224543567", "TEST7@EMAIL.COM", 9)
,(8, "JUAN", "GABRIEL", "09224543567", "TEST8@EMAIL.COM", 6)
,(9, "ANNA", "DESEMAN", "09224543570", "TEST9@EMAIL.COM", 3)
,(10, "TUNG TUNG", "SAHUR", "09224543568", "TEST10@EMAIL.COM", 2);

INSERT INTO PRODUCTS (ID, PRODUCT_NAME, SELLER_ID, PRODUCT_CLASSIFICATION_ID)
VALUES (1, "Tralalero Tralala", 1, 1),
(2, "Ballerina Capuccina", 1, 1),
(3, "Skibidi Sigma", 9, 3),
(4, "Bombardino Crocodilo", 9, 3),
(5, "Tung Tung Tung", 9, 3),
(6, "Sahur", 9, 3),
(7, "Assassino Capuccino", 3, 6),
(8, "Brr Brr Patapim", 3, 6),
(9, "Chimpanzini Bananini", 3, 2),
(10, "Russel Derpo", 2, 2);

INSERT INTO ORDERS (ID, ORDER_CREATED, STATUS_ID, ORDERED_BY, SELLER_ID, PRODUCT_ID)
VALUES (1, "2026-07-23 14:30:00", 1, 10, 2, 2),
(2, "2025-07-23 14:30:00", 1, 10, 1, 1),
(3, "2028-11-23 14:30:00", 1, 10, 1, 5),
(4, "2025-12-23 14:30:00", 1, 10, 6, 6),
(5, "2026-01-23 14:30:00", 1, 10, 6, 7),
(6, "2026-06-23 14:30:00", 1, 10, 6, 2),
(7, "2026-10-23 14:30:00", 1, 10, 6, 2),
(8, "2026-09-23 14:30:00", 1, 10, 10, 9),
(9, "2026-02-02 14:30:00", 1, 10, 1, 8),
(10, "2026-04-28 14:30:00", 1, 10, 8, 10);

SELECT b.product_classification_name, count(*) AS total_count_of_products FROM products a
INNER JOIN product_classification b
WHERE a.product_classification_id = b.id
GROUP BY b.product_classification_name;

SELECT fname, lname FROM customers
WHERE city LIKE '%a%';

SELECT * FROM orders
WHERE order_created BETWEEN '2026-01-01' AND '2026-08-31';

SELECT b.product_classification_name, MAX(a.price) AS highest_price FROM products a
INNER JOIN product_classification b
WHERE a.product_classification_id = b.id
GROUP BY b.product_classification_name;

SELECT a.* FROM orders a
INNER JOIN customers b
WHERE b.customer_id = a.ordered_by
AND b.email_address LIKE '%@GMAIL.COM'
ORDER BY a.order_created DESC;

SELECT a.*, b.email_address FROM orders a
INNER JOIN customers b
WHERE b.customer_id = a.ordered_by
AND b.email_address LIKE '%@GMAIL.COM'
ORDER BY a.order_created DESC;